"use strict";module.exports=function(s){require("source-map-support").install();var n=require("./modbus-basics"),i=require("./core/modbus-core"),t=require("./core/modbus-io-core"),r=require("debug")("contribModbus:poller");s.nodes.registerType("modbus-flex-sequencer",function(e){s.nodes.createNode(this,e),this.name=e.name,this.sequences=e.sequences,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.connection=null,this.useIOFile=e.useIOFile,this.ioFile=s.nodes.getNode(e.ioFile),this.useIOForPayload=e.useIOForPayload,this.logIOActivities=e.logIOActivities,this.emptyMsgOnFail=e.emptyMsgOnFail,this.keepMsgProperties=e.keepMsgProperties,this.internalDebugLog=r,this.verboseLogging=s.settings.verbose;var o=this;o.bufferMessageList=new Map,n.setNodeStatusTo("waiting",o);var a=s.nodes.getNode(e.server);a&&(a.registerForModbus(o),n.initModbusClientEvents(o,a),o.onModbusReadDone=function(e,s){o.showStatusActivities&&n.setNodeStatusTo("reading done",o),o.send(t.buildMessageWithIO(o,e.data,e,s)),o.emit("modbusFlexGetterNodeDone")},o.errorProtocolMsg=function(e,s){n.logMsgError(o,e,s),n.sendEmptyMsgOnFail(o,e,s)},o.onModbusReadError=function(e,s){o.internalDebugLog(e.message);s=i.getOriginalMessage(o.bufferMessageList,s);o.errorProtocolMsg(e,s),n.setModbusError(o,a,e,s),o.emit("modbusFlexGetterNodeError")},o.prepareMsg=function(e){switch((e="string"==typeof e?JSON.parse(e):e).fc){case"FC1":e.fc=1;break;case"FC2":e.fc=2;break;case"FC3":e.fc=3;break;case"FC4":e.fc=4}return e.unitid=parseInt(e.unitid),e.address=parseInt(e.address)||0,e.quantity=parseInt(e.quantity)||1,e},o.isValidModbusMsg=function(e){var s=!0;return Number.isInteger(e.unitid)&&1<=e.unitid&&e.unitid<=255||(o.error("Unit ID Not Valid",e),s&=!1),!s||Number.isInteger(e.address)&&0<=e.address&&e.address<=65535||(o.error("Address Not Valid",e),s&=!1),!s||Number.isInteger(e.quantity)&&1<=e.quantity&&e.quantity<=65535||(o.error("Quantity Not Valid",e),s&=!1),s},o.buildNewMessageObject=function(e,s){var t=i.getObjectId();return{topic:s.topic||e.id,messageId:t,payload:{name:s.name,unitid:s.unitid,fc:s.fc,address:s.address,quantity:s.quantity,emptyMsgOnFail:e.emptyMsgOnFail,keepMsgProperties:e.keepMsgProperties,messageId:t}}},o.on("input",function(s){if(a.client){var e=(n.invalidSequencesIn(s)?o:s).sequences,s=Object.assign({},s);try{for(var t in e){var i,r=o.prepareMsg(e[t]);o.isValidModbusMsg(r)&&(i=o.buildNewMessageObject(o,r),o.bufferMessageList.set(i.messageId,n.buildNewMessage(o.keepMsgProperties,r,i)),a.emit("readModbus",i,o.onModbusReadDone,o.onModbusReadError))}}catch(e){o.errorProtocolMsg(e,s)}o.showStatusActivities&&n.setNodeStatusTo(a.actualServiceState,o)}}),o.on("close",function(e){n.setNodeStatusTo("closed",o),o.bufferMessageList.clear(),a.deregisterForModbus(o.id,e)}),o.showStatusActivities||n.setNodeDefaultStatus(o))})};
//# sourceMappingURL=maps/modbus-flex-sequencer.js.map
